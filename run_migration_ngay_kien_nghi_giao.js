const mysql = require('mysql2/promise');
const fs = require('fs');
const path = require('path');

// ƒê·ªçc file c·∫•u h√¨nh database
const dbConfig = require('./src/configs/database');

async function runMigration() {
  let connection;
  
  try {
    console.log('üîó K·∫øt n·ªëi database...');
    connection = await mysql.createConnection({
      host: dbConfig.host,
      user: dbConfig.user,
      password: dbConfig.password,
      database: dbConfig.database,
      multipleStatements: true
    });
    
    console.log('‚úÖ K·∫øt n·ªëi database th√†nh c√¥ng');
    
    // ƒê·ªçc file migration
    const migrationPath = path.join(__dirname, 'src/migrations/add_ngay_kien_nghi_giao.sql');
    const migrationSQL = fs.readFileSync(migrationPath, 'utf8');
    
    console.log('üìù Th·ª±c thi migration...');
    console.log('Migration SQL:');
    console.log(migrationSQL);
    
    // Th·ª±c thi migration
    await connection.execute(migrationSQL);
    
    console.log('‚úÖ Migration th√†nh c√¥ng! ƒê√£ th√™m tr∆∞·ªùng NgayKienNghiGiao v√†o b·∫£ng PhieuDatHangNCC');
    
    // Ki·ªÉm tra k·∫øt qu·∫£
    const [rows] = await connection.execute('DESCRIBE PhieuDatHangNCC');
    console.log('\nüìã C·∫•u tr√∫c b·∫£ng PhieuDatHangNCC sau migration:');
    rows.forEach(row => {
      console.log(`${row.Field} | ${row.Type} | ${row.Null} | ${row.Key} | ${row.Default} | ${row.Extra}`);
    });
    
  } catch (error) {
    console.error('‚ùå L·ªói khi th·ª±c thi migration:', error.message);
    if (error.code === 'ER_DUP_FIELDNAME') {
      console.log('‚ÑπÔ∏è  Tr∆∞·ªùng NgayKienNghiGiao ƒë√£ t·ªìn t·∫°i trong b·∫£ng');
    }
  } finally {
    if (connection) {
      await connection.end();
      console.log('üîå ƒê√£ ƒë√≥ng k·∫øt n·ªëi database');
    }
  }
}

// Ch·∫°y migration
runMigration(); 